{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","src/modules/util.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\nvar $4a87f0c3236948d4$exports = {};\n\"use strict\";\nvar $4a87f0c3236948d4$var$DEFAULT_INITIAL_STATE = Array.from({\n    length: 4\n}, function() {\n    return Array(4).fill(0);\n});\nvar $4a87f0c3236948d4$var$GAME_STATUS = {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n};\nvar $4a87f0c3236948d4$var$MOVE = {\n    up: \"up\",\n    down: \"down\",\n    left: \"left\",\n    right: \"right\"\n};\nvar $4a87f0c3236948d4$var$showElement = function(cssName) {\n    return document.querySelector(cssName).classList.remove(\"hidden\");\n};\nvar $4a87f0c3236948d4$var$hideElement = function(cssName) {\n    return document.querySelector(cssName).classList.add(\"hidden\");\n};\nvar $4a87f0c3236948d4$var$makeDeepClone = function(data) {\n    return JSON.parse(JSON.stringify(data));\n};\n$4a87f0c3236948d4$exports = {\n    DEFAULT_INITIAL_STATE: $4a87f0c3236948d4$var$DEFAULT_INITIAL_STATE,\n    GAME_STATUS: $4a87f0c3236948d4$var$GAME_STATUS,\n    MOVE: $4a87f0c3236948d4$var$MOVE,\n    showElement: $4a87f0c3236948d4$var$showElement,\n    hideElement: $4a87f0c3236948d4$var$hideElement,\n    makeDeepClone: $4a87f0c3236948d4$var$makeDeepClone\n};\n\n\nvar $3d28d7f1aac198f5$var$DEFAULT_INITIAL_STATE = $4a87f0c3236948d4$exports.DEFAULT_INITIAL_STATE, $3d28d7f1aac198f5$var$GAME_STATUS = $4a87f0c3236948d4$exports.GAME_STATUS, $3d28d7f1aac198f5$var$MOVE = $4a87f0c3236948d4$exports.MOVE, $3d28d7f1aac198f5$var$makeDeepClone = $4a87f0c3236948d4$exports.makeDeepClone;\nvar $3d28d7f1aac198f5$var$WIN_SCORE = 2048;\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $3d28d7f1aac198f5$var$DEFAULT_INITIAL_STATE;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.status = $3d28d7f1aac198f5$var$GAME_STATUS.idle;\n        this.score = 0;\n        this.initialState = initialState;\n        this.board = $3d28d7f1aac198f5$var$makeDeepClone(initialState);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = $3d28d7f1aac198f5$var$GAME_STATUS.playing;\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.move($3d28d7f1aac198f5$var$MOVE.down);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.move($3d28d7f1aac198f5$var$MOVE.up);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move($3d28d7f1aac198f5$var$MOVE.right);\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move($3d28d7f1aac198f5$var$MOVE.left);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = $3d28d7f1aac198f5$var$makeDeepClone(this.initialState);\n                this.status = $3d28d7f1aac198f5$var$GAME_STATUS.idle;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this, _loop = function(col) {\n                    var column = direction === $3d28d7f1aac198f5$var$MOVE.up ? _this.board.map(function(row) {\n                        return row[col];\n                    }) : _this.board.map(function(row) {\n                        return row[col];\n                    }).reverse();\n                    column = direction === $3d28d7f1aac198f5$var$MOVE.up ? _this.combineTiles(column) : _this.combineTiles(column).reverse();\n                    for(var row = 0; row < 4; row++)_this.board[row][col] = column[row];\n                };\n                var oldBoard = JSON.stringify(this.board);\n                if (this.status !== $3d28d7f1aac198f5$var$GAME_STATUS.playing) return;\n                if ([\n                    $3d28d7f1aac198f5$var$MOVE.up,\n                    $3d28d7f1aac198f5$var$MOVE.down\n                ].includes(direction)) for(var col = 0; col < 4; col++)_loop(col);\n                else if ([\n                    $3d28d7f1aac198f5$var$MOVE.left,\n                    $3d28d7f1aac198f5$var$MOVE.right\n                ].includes(direction)) {\n                    for(var row = 0; row < 4; row++)if (direction === $3d28d7f1aac198f5$var$MOVE.left) this.board[row] = this.combineTiles(this.board[row]);\n                    else this.board[row] = this.combineTiles(this.board[row].reverse()).reverse();\n                }\n                if (oldBoard !== JSON.stringify(this.board)) this.addRandomTile();\n                this.endGame();\n            }\n        },\n        {\n            key: \"combineTiles\",\n            value: function combineTiles(row) {\n                var newRow = row.filter(function(val) {\n                    return val !== 0;\n                });\n                for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                    newRow[i] *= 2;\n                    this.score += newRow[i];\n                    newRow[i + 1] = 0;\n                }\n                newRow = newRow.filter(function(val) {\n                    return val !== 0;\n                });\n                return newRow.concat(Array(4 - newRow.length).fill(0));\n            }\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                return emptyCells;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = this.getEmptyCells();\n                if (!emptyCells.length) return;\n                var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], row = _emptyCells_Math_floor.row, col = _emptyCells_Math_floor.col;\n                this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"endGame\",\n            value: function endGame() {\n                var gameOver = true;\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] >= $3d28d7f1aac198f5$var$WIN_SCORE) this.status = $3d28d7f1aac198f5$var$GAME_STATUS.win;\n                    if (row < 3 && this.board[row][col] === this.board[row + 1][col] || col < 3 && this.board[row][col] === this.board[row][col + 1]) gameOver = false;\n                }\n                if (!this.getEmptyCells().length && gameOver) this.status = $3d28d7f1aac198f5$var$GAME_STATUS.lose;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\nvar $197cd56b15c33885$var$GAME_STATUS = $4a87f0c3236948d4$exports.GAME_STATUS, $197cd56b15c33885$var$showElement = $4a87f0c3236948d4$exports.showElement, $197cd56b15c33885$var$hideElement = $4a87f0c3236948d4$exports.hideElement;\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var updateButton = function updateButton() {\n        var button = document.querySelector(\".button\");\n        if ($197cd56b15c33885$var$game.status === $197cd56b15c33885$var$GAME_STATUS.idle) {\n            button.classList.remove(\"restart\");\n            button.classList.add(\"start\");\n            button.textContent = \"Start\";\n        } else {\n            button.classList.remove(\"start\");\n            button.classList.add(\"restart\");\n            button.textContent = \"Restart\";\n        }\n    };\n    var updateMessage = function updateMessage() {\n        switch($197cd56b15c33885$var$game.status){\n            case $197cd56b15c33885$var$GAME_STATUS.idle:\n                $197cd56b15c33885$var$showElement(\".message-start\");\n                $197cd56b15c33885$var$hideElement(\".message-win\");\n                $197cd56b15c33885$var$hideElement(\".message-lose\");\n                break;\n            case $197cd56b15c33885$var$GAME_STATUS.playing:\n                $197cd56b15c33885$var$hideElement(\".message-start\");\n                break;\n            case $197cd56b15c33885$var$GAME_STATUS.win:\n                $197cd56b15c33885$var$showElement(\".message-win\");\n                break;\n            case $197cd56b15c33885$var$GAME_STATUS.lose:\n                $197cd56b15c33885$var$showElement(\".message-lose\");\n                break;\n            default:\n                break;\n        }\n        updateButton();\n    };\n    var getScore = function getScore() {\n        document.querySelector(\".game-score\").textContent = $197cd56b15c33885$var$game.score;\n    };\n    var updateBoard = function updateBoard() {\n        var cells = document.querySelectorAll(\".field-cell\");\n        var index = 0;\n        for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n            var cell = cells[index];\n            cell.textContent = $197cd56b15c33885$var$game.board[row][col] || \"\";\n            cell.className = \"field-cell field-cell--\".concat($197cd56b15c33885$var$game.board[row][col]);\n            index++;\n        }\n    };\n    document.querySelector(\".button\").addEventListener(\"click\", function() {\n        if ($197cd56b15c33885$var$game.status === $197cd56b15c33885$var$GAME_STATUS.idle) $197cd56b15c33885$var$game.start();\n        else $197cd56b15c33885$var$game.restart();\n        updateMessage();\n        getScore();\n        updateBoard();\n    });\n    document.addEventListener(\"keydown\", function(e) {\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        updateMessage();\n        getScore();\n        updateBoard();\n    });\n});\n\n})();\n//# sourceMappingURL=index.78314190.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst { GAME_STATUS, showElement, hideElement } = require('../modules/util');\n\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  function updateButton() {\n    const button = document.querySelector('.button');\n\n    if (game.status === GAME_STATUS.idle) {\n      button.classList.remove('restart');\n      button.classList.add('start');\n      button.textContent = 'Start';\n    } else {\n      button.classList.remove('start');\n      button.classList.add('restart');\n      button.textContent = 'Restart';\n    }\n  }\n\n  function updateMessage() {\n    switch (game.status) {\n      case GAME_STATUS.idle:\n        showElement('.message-start');\n        hideElement('.message-win');\n        hideElement('.message-lose');\n\n        break;\n      case GAME_STATUS.playing:\n        hideElement('.message-start');\n        break;\n\n      case GAME_STATUS.win:\n        showElement('.message-win');\n        break;\n\n      case GAME_STATUS.lose:\n        showElement('.message-lose');\n        break;\n\n      default:\n        break;\n    }\n\n    updateButton();\n  }\n\n  function getScore() {\n    document.querySelector('.game-score').textContent = game.score;\n  }\n\n  function updateBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n    let index = 0;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const cell = cells[index];\n\n        cell.textContent = game.board[row][col] || '';\n        cell.className = `field-cell field-cell--${game.board[row][col]}`;\n        index++;\n      }\n    }\n  }\n\n  document.querySelector('.button').addEventListener('click', () => {\n    if (game.status === GAME_STATUS.idle) {\n      game.start();\n    } else {\n      game.restart();\n    }\n\n    updateMessage();\n    getScore();\n    updateBoard();\n  });\n\n  document.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateMessage();\n    getScore();\n    updateBoard();\n  });\n});\n","'use strict';\n\nconst {\n  DEFAULT_INITIAL_STATE,\n  GAME_STATUS,\n  MOVE,\n  makeDeepClone,\n} = require('./util');\nconst WIN_SCORE = 2048;\n\nclass Game {\n  constructor(initialState = DEFAULT_INITIAL_STATE) {\n    this.status = GAME_STATUS.idle;\n    this.score = 0;\n    this.initialState = initialState;\n    this.board = makeDeepClone(initialState);\n  }\n\n  start() {\n    this.status = GAME_STATUS.playing;\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  moveDown() {\n    this.move(MOVE.down);\n  }\n\n  moveUp() {\n    this.move(MOVE.up);\n  }\n\n  moveRight() {\n    this.move(MOVE.right);\n  }\n\n  moveLeft() {\n    this.move(MOVE.left);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  restart() {\n    this.board = makeDeepClone(this.initialState);\n    this.status = GAME_STATUS.idle;\n    this.score = 0;\n  }\n\n  move(direction) {\n    const oldBoard = JSON.stringify(this.board);\n\n    if (this.status !== GAME_STATUS.playing) {\n      return;\n    }\n\n    if ([MOVE.up, MOVE.down].includes(direction)) {\n      for (let col = 0; col < 4; col++) {\n        let column\n          = direction === MOVE.up\n            ? this.board.map((row) => row[col])\n            : this.board.map((row) => row[col]).reverse();\n\n        column\n          = direction === MOVE.up\n            ? this.combineTiles(column)\n            : this.combineTiles(column).reverse();\n\n        for (let row = 0; row < 4; row++) {\n          this.board[row][col] = column[row];\n        }\n      }\n    } else if ([MOVE.left, MOVE.right].includes(direction)) {\n      for (let row = 0; row < 4; row++) {\n        if (direction === MOVE.left) {\n          this.board[row] = this.combineTiles(this.board[row]);\n        } else {\n          this.board[row] = this.combineTiles(\n            this.board[row].reverse(),\n          ).reverse();\n        }\n      }\n    }\n\n    if (oldBoard !== JSON.stringify(this.board)) {\n      this.addRandomTile();\n    }\n\n    this.endGame();\n  }\n\n  combineTiles(row) {\n    let newRow = row.filter((val) => val !== 0);\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        this.score += newRow[i];\n        newRow[i + 1] = 0;\n      }\n    }\n\n    newRow = newRow.filter((val) => val !== 0);\n\n    return newRow.concat(Array(4 - newRow.length).fill(0));\n  }\n\n  getEmptyCells() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({\n            row, col,\n          });\n        }\n      }\n    }\n\n    return emptyCells;\n  }\n\n  addRandomTile() {\n    const emptyCells = this.getEmptyCells();\n\n    if (!emptyCells.length) {\n      return;\n    }\n\n    const { row, col }\n      = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  endGame() {\n    let gameOver = true;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] >= WIN_SCORE) {\n          this.status = GAME_STATUS.win;\n        }\n\n        if (\n          (row < 3 && this.board[row][col] === this.board[row + 1][col])\n          || (col < 3 && this.board[row][col] === this.board[row][col + 1])\n        ) {\n          gameOver = false;\n        }\n      }\n    }\n\n    if (!this.getEmptyCells().length && gameOver) {\n      this.status = GAME_STATUS.lose;\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","'use strict';\n\nconst DEFAULT_INITIAL_STATE = Array.from({ length: 4 }, () => Array(4).fill(0));\nconst GAME_STATUS = {\n  idle: 'idle',\n  playing: 'playing',\n  win: 'win',\n  lose: 'lose',\n};\n\nconst MOVE = {\n  up: 'up',\n  down: 'down',\n  left: 'left',\n  right: 'right',\n};\n\nconst showElement = (cssName) =>\n  document.querySelector(cssName).classList.remove('hidden');\n\nconst hideElement = (cssName) =>\n  document.querySelector(cssName).classList.add('hidden');\n\nconst makeDeepClone = (data) => JSON.parse(JSON.stringify(data));\n\nmodule.exports = {\n  DEFAULT_INITIAL_STATE,\n  GAME_STATUS,\n  MOVE,\n  showElement,\n  hideElement,\n  makeDeepClone,\n};\n"],"names":["$3d28d7f1aac198f5$exports","$4a87f0c3236948d4$exports","$3d28d7f1aac198f5$var$DEFAULT_INITIAL_STATE","$3d28d7f1aac198f5$var$GAME_STATUS","$3d28d7f1aac198f5$var$MOVE","$3d28d7f1aac198f5$var$makeDeepClone","$197cd56b15c33885$var$GAME_STATUS","$197cd56b15c33885$var$showElement","$197cd56b15c33885$var$hideElement","$197cd56b15c33885$var$game","DEFAULT_INITIAL_STATE","Array","from","length","fill","GAME_STATUS","idle","playing","win","lose","MOVE","up","down","left","right","showElement","cssName","document","querySelector","classList","remove","hideElement","add","makeDeepClone","data","JSON","parse","stringify","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","status","score","board","key","value","addRandomTile","move","direction","_this","_loop","col","column","map","row","reverse","combineTiles","oldBoard","includes","endGame","newRow","filter","val","i","concat","emptyCells","push","getEmptyCells","_emptyCells_Math_floor","Math","floor","random","gameOver","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","addEventListener","updateButton","button","textContent","updateMessage","getScore","updateBoard","cells","querySelectorAll","index","cell","className","start","restart","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.78314190.js.map"}