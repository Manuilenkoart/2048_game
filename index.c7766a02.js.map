{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","src/modules/util.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nvar $cdf9b832e2e76c1e$exports = {};\n\"use strict\";\nconst $cdf9b832e2e76c1e$var$DEFAULT_INITIAL_STATE = Array.from({\n    length: 4\n}, ()=>Array(4).fill(0));\nconst $cdf9b832e2e76c1e$var$GAME_STATUS = {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n};\nconst $cdf9b832e2e76c1e$var$MOVE = {\n    up: \"up\",\n    down: \"down\",\n    left: \"left\",\n    right: \"right\"\n};\nconst $cdf9b832e2e76c1e$var$showElement = (cssName)=>document.querySelector(cssName).classList.remove(\"hidden\");\nconst $cdf9b832e2e76c1e$var$hideElement = (cssName)=>document.querySelector(cssName).classList.add(\"hidden\");\nconst $cdf9b832e2e76c1e$var$makeDeepClone = (data)=>JSON.parse(JSON.stringify(data));\n$cdf9b832e2e76c1e$exports = {\n    DEFAULT_INITIAL_STATE: $cdf9b832e2e76c1e$var$DEFAULT_INITIAL_STATE,\n    GAME_STATUS: $cdf9b832e2e76c1e$var$GAME_STATUS,\n    MOVE: $cdf9b832e2e76c1e$var$MOVE,\n    showElement: $cdf9b832e2e76c1e$var$showElement,\n    hideElement: $cdf9b832e2e76c1e$var$hideElement,\n    makeDeepClone: $cdf9b832e2e76c1e$var$makeDeepClone\n};\n\n\nvar $a5fd07fa01589658$require$DEFAULT_INITIAL_STATE = $cdf9b832e2e76c1e$exports.DEFAULT_INITIAL_STATE;\nvar $a5fd07fa01589658$require$GAME_STATUS = $cdf9b832e2e76c1e$exports.GAME_STATUS;\nvar $a5fd07fa01589658$require$MOVE = $cdf9b832e2e76c1e$exports.MOVE;\nvar $a5fd07fa01589658$require$makeDeepClone = $cdf9b832e2e76c1e$exports.makeDeepClone;\nconst $a5fd07fa01589658$var$WIN_SCORE = 2048;\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = $a5fd07fa01589658$require$DEFAULT_INITIAL_STATE){\n        this.status = $a5fd07fa01589658$require$GAME_STATUS.idle;\n        this.score = 0;\n        this.initialState = initialState;\n        this.board = $a5fd07fa01589658$require$makeDeepClone(initialState);\n    }\n    start() {\n        this.status = $a5fd07fa01589658$require$GAME_STATUS.playing;\n        this.addRandomTile();\n        this.addRandomTile();\n    }\n    moveDown() {\n        this.move($a5fd07fa01589658$require$MOVE.down);\n    }\n    moveUp() {\n        this.move($a5fd07fa01589658$require$MOVE.up);\n    }\n    moveRight() {\n        this.move($a5fd07fa01589658$require$MOVE.right);\n    }\n    moveLeft() {\n        this.move($a5fd07fa01589658$require$MOVE.left);\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.board;\n    }\n    getStatus() {\n        return this.status;\n    }\n    restart() {\n        this.board = $a5fd07fa01589658$require$makeDeepClone(this.initialState);\n        this.status = $a5fd07fa01589658$require$GAME_STATUS.idle;\n        this.score = 0;\n    }\n    move(direction) {\n        const oldBoard = JSON.stringify(this.board);\n        if (this.status !== $a5fd07fa01589658$require$GAME_STATUS.playing) return;\n        if ([\n            $a5fd07fa01589658$require$MOVE.up,\n            $a5fd07fa01589658$require$MOVE.down\n        ].includes(direction)) for(let col = 0; col < 4; col++){\n            let column = direction === $a5fd07fa01589658$require$MOVE.up ? this.board.map((row)=>row[col]) : this.board.map((row)=>row[col]).reverse();\n            column = direction === $a5fd07fa01589658$require$MOVE.up ? this.combineTiles(column) : this.combineTiles(column).reverse();\n            for(let row = 0; row < 4; row++)this.board[row][col] = column[row];\n        }\n        else if ([\n            $a5fd07fa01589658$require$MOVE.left,\n            $a5fd07fa01589658$require$MOVE.right\n        ].includes(direction)) {\n            for(let row = 0; row < 4; row++)if (direction === $a5fd07fa01589658$require$MOVE.left) this.board[row] = this.combineTiles(this.board[row]);\n            else this.board[row] = this.combineTiles(this.board[row].reverse()).reverse();\n        }\n        if (oldBoard !== JSON.stringify(this.board)) this.addRandomTile();\n        this.endGame();\n    }\n    combineTiles(row) {\n        let newRow = row.filter((val)=>val !== 0);\n        for(let i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow[i + 1] = 0;\n        }\n        newRow = newRow.filter((val)=>val !== 0);\n        return newRow.concat(Array(4 - newRow.length).fill(0));\n    }\n    getEmptyCells() {\n        const emptyCells = [];\n        for(let row = 0; row < 4; row++){\n            for(let col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                row: row,\n                col: col\n            });\n        }\n        return emptyCells;\n    }\n    addRandomTile() {\n        const emptyCells = this.getEmptyCells();\n        if (!emptyCells.length) return;\n        const { row: row, col: col } = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n    endGame() {\n        let gameOver = true;\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            if (this.board[row][col] >= $a5fd07fa01589658$var$WIN_SCORE) this.status = $a5fd07fa01589658$require$GAME_STATUS.win;\n            if (row < 3 && this.board[row][col] === this.board[row + 1][col] || col < 3 && this.board[row][col] === this.board[row][col + 1]) gameOver = false;\n        }\n        if (!this.getEmptyCells().length && gameOver) this.status = $a5fd07fa01589658$require$GAME_STATUS.lose;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n\nvar $09e991522ca7e64e$require$GAME_STATUS = $cdf9b832e2e76c1e$exports.GAME_STATUS;\nvar $09e991522ca7e64e$require$showElement = $cdf9b832e2e76c1e$exports.showElement;\nvar $09e991522ca7e64e$require$hideElement = $cdf9b832e2e76c1e$exports.hideElement;\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    function updateButton() {\n        const button = document.querySelector(\".button\");\n        if ($09e991522ca7e64e$var$game.status === $09e991522ca7e64e$require$GAME_STATUS.idle) {\n            button.classList.remove(\"restart\");\n            button.classList.add(\"start\");\n            button.textContent = \"Start\";\n        } else {\n            button.classList.remove(\"start\");\n            button.classList.add(\"restart\");\n            button.textContent = \"Restart\";\n        }\n    }\n    function updateMessage() {\n        switch($09e991522ca7e64e$var$game.status){\n            case $09e991522ca7e64e$require$GAME_STATUS.idle:\n                $09e991522ca7e64e$require$showElement(\".message-start\");\n                $09e991522ca7e64e$require$hideElement(\".message-win\");\n                $09e991522ca7e64e$require$hideElement(\".message-lose\");\n                break;\n            case $09e991522ca7e64e$require$GAME_STATUS.playing:\n                $09e991522ca7e64e$require$hideElement(\".message-start\");\n                break;\n            case $09e991522ca7e64e$require$GAME_STATUS.win:\n                $09e991522ca7e64e$require$showElement(\".message-win\");\n                break;\n            case $09e991522ca7e64e$require$GAME_STATUS.lose:\n                $09e991522ca7e64e$require$showElement(\".message-lose\");\n                break;\n            default:\n                break;\n        }\n        updateButton();\n    }\n    function getScore() {\n        document.querySelector(\".game-score\").textContent = $09e991522ca7e64e$var$game.score;\n    }\n    function updateBoard() {\n        const cells = document.querySelectorAll(\".field-cell\");\n        let index = 0;\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            const cell = cells[index];\n            cell.textContent = $09e991522ca7e64e$var$game.board[row][col] || \"\";\n            cell.className = `field-cell field-cell--${$09e991522ca7e64e$var$game.board[row][col]}`;\n            index++;\n        }\n    }\n    document.querySelector(\".button\").addEventListener(\"click\", ()=>{\n        if ($09e991522ca7e64e$var$game.status === $09e991522ca7e64e$require$GAME_STATUS.idle) $09e991522ca7e64e$var$game.start();\n        else $09e991522ca7e64e$var$game.restart();\n        updateMessage();\n        getScore();\n        updateBoard();\n    });\n    document.addEventListener(\"keydown\", (e)=>{\n        switch(e.key){\n            case \"ArrowLeft\":\n                $09e991522ca7e64e$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $09e991522ca7e64e$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $09e991522ca7e64e$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $09e991522ca7e64e$var$game.moveDown();\n                break;\n        }\n        updateMessage();\n        getScore();\n        updateBoard();\n    });\n});\n\n\n//# sourceMappingURL=index.c7766a02.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst { GAME_STATUS, showElement, hideElement } = require('../modules/util');\n\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  function updateButton() {\n    const button = document.querySelector('.button');\n\n    if (game.status === GAME_STATUS.idle) {\n      button.classList.remove('restart');\n      button.classList.add('start');\n      button.textContent = 'Start';\n    } else {\n      button.classList.remove('start');\n      button.classList.add('restart');\n      button.textContent = 'Restart';\n    }\n  }\n\n  function updateMessage() {\n    switch (game.status) {\n      case GAME_STATUS.idle:\n        showElement('.message-start');\n        hideElement('.message-win');\n        hideElement('.message-lose');\n\n        break;\n      case GAME_STATUS.playing:\n        hideElement('.message-start');\n        break;\n\n      case GAME_STATUS.win:\n        showElement('.message-win');\n        break;\n\n      case GAME_STATUS.lose:\n        showElement('.message-lose');\n        break;\n\n      default:\n        break;\n    }\n\n    updateButton();\n  }\n\n  function getScore() {\n    document.querySelector('.game-score').textContent = game.score;\n  }\n\n  function updateBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n    let index = 0;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const cell = cells[index];\n\n        cell.textContent = game.board[row][col] || '';\n        cell.className = `field-cell field-cell--${game.board[row][col]}`;\n        index++;\n      }\n    }\n  }\n\n  document.querySelector('.button').addEventListener('click', () => {\n    if (game.status === GAME_STATUS.idle) {\n      game.start();\n    } else {\n      game.restart();\n    }\n\n    updateMessage();\n    getScore();\n    updateBoard();\n  });\n\n  document.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateMessage();\n    getScore();\n    updateBoard();\n  });\n});\n","'use strict';\n\nconst {\n  DEFAULT_INITIAL_STATE,\n  GAME_STATUS,\n  MOVE,\n  makeDeepClone,\n} = require('./util');\nconst WIN_SCORE = 2048;\n\nclass Game {\n  constructor(initialState = DEFAULT_INITIAL_STATE) {\n    this.status = GAME_STATUS.idle;\n    this.score = 0;\n    this.initialState = initialState;\n    this.board = makeDeepClone(initialState);\n  }\n\n  start() {\n    this.status = GAME_STATUS.playing;\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  moveDown() {\n    this.move(MOVE.down);\n  }\n\n  moveUp() {\n    this.move(MOVE.up);\n  }\n\n  moveRight() {\n    this.move(MOVE.right);\n  }\n\n  moveLeft() {\n    this.move(MOVE.left);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  restart() {\n    this.board = makeDeepClone(this.initialState);\n    this.status = GAME_STATUS.idle;\n    this.score = 0;\n  }\n\n  move(direction) {\n    const oldBoard = JSON.stringify(this.board);\n\n    if (this.status !== GAME_STATUS.playing) {\n      return;\n    }\n\n    if ([MOVE.up, MOVE.down].includes(direction)) {\n      for (let col = 0; col < 4; col++) {\n        let column\n          = direction === MOVE.up\n            ? this.board.map((row) => row[col])\n            : this.board.map((row) => row[col]).reverse();\n\n        column\n          = direction === MOVE.up\n            ? this.combineTiles(column)\n            : this.combineTiles(column).reverse();\n\n        for (let row = 0; row < 4; row++) {\n          this.board[row][col] = column[row];\n        }\n      }\n    } else if ([MOVE.left, MOVE.right].includes(direction)) {\n      for (let row = 0; row < 4; row++) {\n        if (direction === MOVE.left) {\n          this.board[row] = this.combineTiles(this.board[row]);\n        } else {\n          this.board[row] = this.combineTiles(\n            this.board[row].reverse(),\n          ).reverse();\n        }\n      }\n    }\n\n    if (oldBoard !== JSON.stringify(this.board)) {\n      this.addRandomTile();\n    }\n\n    this.endGame();\n  }\n\n  combineTiles(row) {\n    let newRow = row.filter((val) => val !== 0);\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        this.score += newRow[i];\n        newRow[i + 1] = 0;\n      }\n    }\n\n    newRow = newRow.filter((val) => val !== 0);\n\n    return newRow.concat(Array(4 - newRow.length).fill(0));\n  }\n\n  getEmptyCells() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({\n            row, col,\n          });\n        }\n      }\n    }\n\n    return emptyCells;\n  }\n\n  addRandomTile() {\n    const emptyCells = this.getEmptyCells();\n\n    if (!emptyCells.length) {\n      return;\n    }\n\n    const { row, col }\n      = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  endGame() {\n    let gameOver = true;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] >= WIN_SCORE) {\n          this.status = GAME_STATUS.win;\n        }\n\n        if (\n          (row < 3 && this.board[row][col] === this.board[row + 1][col])\n          || (col < 3 && this.board[row][col] === this.board[row][col + 1])\n        ) {\n          gameOver = false;\n        }\n      }\n    }\n\n    if (!this.getEmptyCells().length && gameOver) {\n      this.status = GAME_STATUS.lose;\n    }\n  }\n}\n\nmodule.exports = Game;\n","'use strict';\n\nconst DEFAULT_INITIAL_STATE = Array.from({ length: 4 }, () => Array(4).fill(0));\nconst GAME_STATUS = {\n  idle: 'idle',\n  playing: 'playing',\n  win: 'win',\n  lose: 'lose',\n};\n\nconst MOVE = {\n  up: 'up',\n  down: 'down',\n  left: 'left',\n  right: 'right',\n};\n\nconst showElement = (cssName) =>\n  document.querySelector(cssName).classList.remove('hidden');\n\nconst hideElement = (cssName) =>\n  document.querySelector(cssName).classList.add('hidden');\n\nconst makeDeepClone = (data) => JSON.parse(JSON.stringify(data));\n\nmodule.exports = {\n  DEFAULT_INITIAL_STATE,\n  GAME_STATUS,\n  MOVE,\n  showElement,\n  hideElement,\n  makeDeepClone,\n};\n"],"names":["$a5fd07fa01589658$exports","$cdf9b832e2e76c1e$exports","$a5fd07fa01589658$require$DEFAULT_INITIAL_STATE","DEFAULT_INITIAL_STATE","Array","from","length","fill","GAME_STATUS","idle","playing","win","lose","MOVE","up","down","left","right","showElement","cssName","document","querySelector","classList","remove","hideElement","add","makeDeepClone","data","JSON","parse","stringify","$a5fd07fa01589658$require$GAME_STATUS","$a5fd07fa01589658$require$MOVE","$a5fd07fa01589658$require$makeDeepClone","constructor","initialState","status","score","board","start","addRandomTile","moveDown","move","moveUp","moveRight","moveLeft","getScore","getState","getStatus","restart","direction","oldBoard","includes","col","column","map","row","reverse","combineTiles","endGame","newRow","filter","val","i","concat","getEmptyCells","emptyCells","push","Math","floor","random","gameOver","$09e991522ca7e64e$require$GAME_STATUS","$09e991522ca7e64e$require$showElement","$09e991522ca7e64e$require$hideElement","$09e991522ca7e64e$var$game","addEventListener","updateMessage","updateButton","button","textContent","updateBoard","cells","querySelectorAll","index","cell","className","e","key"],"version":3,"file":"index.c7766a02.js.map"}